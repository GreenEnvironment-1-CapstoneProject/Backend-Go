basePath: /api/v1
definitions:
  controller.AdminInfoResponse:
    properties:
      email:
        type: string
      id:
        type: string
      name:
        type: string
      username:
        type: string
    type: object
  controller.AdminLoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  controller.AdminLoginResponse:
    properties:
      token:
        type: string
    type: object
  controller.AdminUpdateRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - email
    - name
    - password
    - username
    type: object
  controller.UserInfoResponse:
    properties:
      address:
        type: string
      avatar_url:
        type: string
      coin:
        type: integer
      email:
        type: string
      exp:
        type: integer
      gender:
        type: string
      id:
        type: string
      is_membership:
        type: boolean
      name:
        type: string
      phone:
        type: string
      username:
        type: string
    type: object
  controller.UserLoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  controller.UserLoginResponse:
    properties:
      token:
        type: string
    type: object
  controller.UserRegisterRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    required:
    - email
    - name
    - password
    type: object
  controller.UserRegisterResponse:
    properties:
      address:
        type: string
      avatar_url:
        type: string
      coin:
        type: integer
      email:
        type: string
      exp:
        type: integer
      gender:
        type: string
      id:
        type: string
      is_membership:
        type: boolean
      name:
        type: string
      phone:
        type: string
      username:
        type: string
    type: object
  controller.UserUpdateRequest:
    properties:
      address:
        type: string
      avatar_url:
        type: string
      email:
        type: string
      gender:
        type: string
      name:
        type: string
      password:
        type: string
      phone:
        type: string
      username:
        type: string
    required:
    - address
    - avatar_url
    - email
    - gender
    - name
    - password
    - phone
    - username
    type: object
  helper.Response:
    description: Standard API response format
    properties:
      data: {}
      message:
        type: string
      status:
        type: boolean
    type: object
host: https://greenenvironment.my.id
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server Swagger server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: capstone project green environment
  version: "1.0"
paths:
  /admin:
    delete:
      consumes:
      - application/json
      description: Remove an admin account from the system
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Delete successful
          schema:
            allOf:
            - $ref: '#/definitions/helper.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/helper.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Delete admin account
      tags:
      - Admin
    get:
      consumes:
      - application/json
      description: Get admin details based on the JWT token provided
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Admin data retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/helper.Response'
            - properties:
                data:
                  $ref: '#/definitions/controller.AdminInfoResponse'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/helper.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/helper.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Retrieve admin details
      tags:
      - Admin
    put:
      consumes:
      - application/json
      description: Update admin details such as name, username, email, or password
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Admin update payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controller.AdminUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Update successful
          schema:
            allOf:
            - $ref: '#/definitions/helper.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Invalid input or validation error
          schema:
            allOf:
            - $ref: '#/definitions/helper.Response'
            - properties:
                data:
                  type: string
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/helper.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/helper.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Update admin profile
      tags:
      - Admin
  /admin/login:
    post:
      consumes:
      - application/json
      description: Authenticate admin and generate JWT token
      parameters:
      - description: Admin login payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controller.AdminLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Login successful
          schema:
            allOf:
            - $ref: '#/definitions/helper.Response'
            - properties:
                data:
                  $ref: '#/definitions/controller.AdminLoginResponse'
              type: object
        "400":
          description: Invalid input or validation error
          schema:
            allOf:
            - $ref: '#/definitions/helper.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/helper.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Admin login
      tags:
      - Admin
  /users/delete:
    delete:
      consumes:
      - application/json
      description: Delete the authenticated user's account
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/helper.Response'
            - properties:
                data:
                  type: string
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/helper.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/helper.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Delete user account
      tags:
      - Users
  /users/login:
    post:
      consumes:
      - application/json
      description: Authenticate user and generate JWT token
      parameters:
      - description: User login payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controller.UserLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/helper.Response'
            - properties:
                data:
                  $ref: '#/definitions/controller.UserLoginResponse'
              type: object
        "400":
          description: Invalid input or validation error
          schema:
            allOf:
            - $ref: '#/definitions/helper.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/helper.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: User login
      tags:
      - Users
  /users/profile:
    get:
      consumes:
      - application/json
      description: Retrieve the authenticated user's profile information
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/helper.Response'
            - properties:
                data:
                  $ref: '#/definitions/controller.UserInfoResponse'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/helper.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/helper.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Get user data
      tags:
      - Users
  /users/register:
    post:
      consumes:
      - application/json
      description: Create a new user account in the system
      parameters:
      - description: User registration payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controller.UserRegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/helper.Response'
            - properties:
                data:
                  $ref: '#/definitions/controller.UserRegisterResponse'
              type: object
        "400":
          description: Invalid input or validation error
          schema:
            allOf:
            - $ref: '#/definitions/helper.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/helper.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Register a new user
      tags:
      - Users
  /users/update:
    put:
      consumes:
      - application/json
      description: Update the authenticated user's information
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: User update payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controller.UserUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/helper.Response'
            - properties:
                data:
                  $ref: '#/definitions/controller.UserLoginResponse'
              type: object
        "400":
          description: Invalid input or validation error
          schema:
            allOf:
            - $ref: '#/definitions/helper.Response'
            - properties:
                data:
                  type: string
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/helper.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/helper.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Update user data
      tags:
      - Users
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
